<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--This file has been generated by the pmd-migration tool-->
<!--https://github.com/asarkar/pmd-migration-tool-->
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="TopUp"
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    PMD RuleSets set for TopUp projects
  </description>
  <rule name="AbstractClassWithoutAbstractMethod"
    ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../Annotation/NormalAnnotation[Name[@Image='NoArgsConstructor'] and MemberValuePairs//PrimaryPrefix/Name[@Image='AccessLevel.PROTECTED'] and count(//ImportDeclaration/Name[@Image='lombok.NoArgsConstructor']) = 1]                 or                 ../Annotation/NormalAnnotation[Name[@Image='RequiredArgsConstructor'] and MemberValuePairs//PrimaryPrefix/Name[@Image='AccessLevel.PROTECTED'] and count(//ImportDeclaration/Name[@Image='lombok.RequiredArgsConstructor']) = 1]                 or                 ../Annotation/NormalAnnotation[Name[@Image='AllArgsConstructor'] and MemberValuePairs//PrimaryPrefix/Name[@Image='AccessLevel.PROTECTED'] and count(//ImportDeclaration/Name[@Image='lombok.AllArgsConstructor']) = 1]             ]"/>
    </properties>
  </rule>
  <rule name="AccessorClassGeneration" ref="category/java/bestpractices.xml/AccessorClassGeneration"/>
  <rule name="AccessorMethodGeneration" ref="category/java/bestpractices.xml/AccessorMethodGeneration"/>
  <rule name="ArrayIsStoredDirectly" ref="category/java/bestpractices.xml/ArrayIsStoredDirectly"/>
  <rule name="AvoidPrintStackTrace" ref="category/java/bestpractices.xml/AvoidPrintStackTrace"/>
  <rule name="AvoidReassigningParameters" ref="category/java/bestpractices.xml/AvoidReassigningParameters"/>
  <rule name="AvoidStringBufferField" ref="category/java/bestpractices.xml/AvoidStringBufferField"/>
  <rule name="AvoidUsingHardCodedIP" ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"/>
  <rule name="CheckResultSet" ref="category/java/bestpractices.xml/CheckResultSet"/>
  <rule name="ConstantsInInterface" ref="category/java/bestpractices.xml/ConstantsInInterface"/>
  <rule name="DefaultLabelNotLastInSwitchStmt"
    ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt"/>
  <rule name="ForLoopCanBeForeach" ref="category/java/bestpractices.xml/ForLoopCanBeForeach"/>
  <rule name="JUnit4SuitesShouldUseSuiteAnnotation"
    ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation"/>
  <rule name="JUnit4TestShouldUseAfterAnnotation"
    ref="category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation"/>
  <rule name="JUnit4TestShouldUseBeforeAnnotation"
    ref="category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation"/>
  <rule name="JUnit4TestShouldUseTestAnnotation"
    ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation"/>
  <!--<rule name="JUnitAssertionsShouldIncludeMessage"-->
  <!--ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage"/>-->
  <rule name="JUnitTestsShouldIncludeAssert"
    ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert"/>
  <rule name="JUnitUseExpected" ref="category/java/bestpractices.xml/JUnitUseExpected"/>
  <rule name="LooseCoupling" ref="category/java/bestpractices.xml/LooseCoupling"/>
  <rule name="LooseCoupling" ref="category/java/bestpractices.xml/LooseCoupling"/>
  <rule name="MethodReturnsInternalArray" ref="category/java/bestpractices.xml/MethodReturnsInternalArray"/>
  <rule name="OneDeclarationPerLine" ref="category/java/bestpractices.xml/OneDeclarationPerLine"/>
  <rule name="PositionLiteralsFirstInCaseInsensitiveComparisons"
    ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons"/>
  <rule name="PositionLiteralsFirstInComparisons"
    ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons"/>
  <rule name="PreserveStackTrace" ref="category/java/bestpractices.xml/PreserveStackTrace"/>
  <rule name="ReplaceEnumerationWithIterator"
    ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator"/>
  <rule name="ReplaceHashtableWithMap" ref="category/java/bestpractices.xml/ReplaceHashtableWithMap"/>
  <rule name="ReplaceVectorWithList" ref="category/java/bestpractices.xml/ReplaceVectorWithList"/>
  <rule name="SwitchStmtsShouldHaveDefault"
    ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault"/>
  <rule name="SystemPrintln" ref="category/java/bestpractices.xml/SystemPrintln"/>
  <rule name="UnusedFormalParameter" ref="category/java/bestpractices.xml/UnusedFormalParameter"/>
  <rule name="UnusedImports" ref="category/java/bestpractices.xml/UnusedImports"/>
  <rule name="UnusedImports" ref="category/java/bestpractices.xml/UnusedImports"/>
  <rule name="UnusedLocalVariable" ref="category/java/bestpractices.xml/UnusedLocalVariable"/>
  <rule name="UnusedPrivateField" ref="category/java/bestpractices.xml/UnusedPrivateField">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../../Annotation/*[Name[@Image='Mock'] and count(//ImportDeclaration/Name[@Image='org.mockito.Mock']) = 1]             ]"/>
    </properties>
  </rule>
  <rule name="UnusedPrivateMethod" ref="category/java/bestpractices.xml/UnusedPrivateMethod">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../Annotation/NormalAnnotation[Name[@Image='AssertTrue'] and count(//ImportDeclaration/Name[@Image='javax.validation.constraints.AssertTrue']) = 1]                 or                 ../../Annotation/MarkerAnnotation[Name[@Image='PrePersist'] and count(//ImportDeclaration/Name[@Image='javax.persistence.PrePersist']) = 1]                 or                 ../../Annotation/MarkerAnnotation[Name[@Image='PreUpdate'] and count(//ImportDeclaration/Name[@Image='javax.persistence.PreUpdate']) = 1]                 or                 ../../Annotation/MarkerAnnotation[Name[@Image='PostLoad'] and count(//ImportDeclaration/Name[@Image='javax.persistence.PostLoad']) = 1]             ]"/>
    </properties>
  </rule>
  <rule name="UseAssertEqualsInsteadOfAssertTrue"
    ref="category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue"/>
  <rule name="UseAssertNullInsteadOfAssertTrue"
    ref="category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue"/>
  <rule name="UseAssertSameInsteadOfAssertTrue"
    ref="category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue"/>
  <rule name="UseAssertTrueInsteadOfAssertEquals"
    ref="category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals"/>
  <rule name="UseCollectionIsEmpty" ref="category/java/bestpractices.xml/UseCollectionIsEmpty"/>
  <rule name="UseVarargs" ref="category/java/bestpractices.xml/UseVarargs"/>
  <rule name="AvoidDollarSigns" ref="category/java/codestyle.xml/AvoidDollarSigns"/>
  <rule name="AvoidPrefixingMethodParameters"
    ref="category/java/codestyle.xml/AvoidPrefixingMethodParameters"/>
  <rule name="AvoidProtectedFieldInFinalClass"
    ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass"/>
  <rule name="AvoidProtectedMethodInFinalClassNotExtending"
    ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
  <rule name="AvoidUsingNativeCode" ref="category/java/codestyle.xml/AvoidUsingNativeCode"/>
  <rule name="BooleanGetMethodName" ref="category/java/codestyle.xml/BooleanGetMethodName"/>
  <rule name="ClassNamingConventions" ref="category/java/codestyle.xml/ClassNamingConventions"/>
  <rule name="DontImportJavaLang" ref="category/java/codestyle.xml/DontImportJavaLang"/>
  <rule name="DuplicateImports" ref="category/java/codestyle.xml/DuplicateImports"/>
  <rule name="EmptyMethodInAbstractClassShouldBeAbstract"
    ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
  <rule name="ExtendsObject" ref="category/java/codestyle.xml/ExtendsObject"/>
  <rule name="FieldDeclarationsShouldBeAtStartOfClass"
    ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
  <rule name="ForLoopShouldBeWhileLoop" ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
  <rule name="ForLoopsMustUseBraces" ref="category/java/codestyle.xml/ForLoopsMustUseBraces"/>
  <rule name="GenericsNaming" ref="category/java/codestyle.xml/GenericsNaming"/>
  <rule name="IfElseStmtsMustUseBraces" ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces"/>
  <rule name="IfStmtsMustUseBraces" ref="category/java/codestyle.xml/IfStmtsMustUseBraces"/>
  <rule name="LocalHomeNamingConvention" ref="category/java/codestyle.xml/LocalHomeNamingConvention"/>
  <rule name="LocalInterfaceSessionNamingConvention"
    ref="category/java/codestyle.xml/LocalInterfaceSessionNamingConvention"/>
  <rule name="LongVariable" ref="category/java/codestyle.xml/LongVariable">
    <properties>
      <property name="minimum" value="30"/>
    </properties>
  </rule>
  <rule name="MDBAndSessionBeanNamingConvention"
    ref="category/java/codestyle.xml/MDBAndSessionBeanNamingConvention"/>
  <rule name="MIsLeadingVariableName" ref="category/java/codestyle.xml/MIsLeadingVariableName"/>
  <rule name="MethodNamingConventions" ref="category/java/codestyle.xml/MethodNamingConventions">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../Annotation/*[Name[@Image='Test'] and count(//ImportDeclaration/Name[@Image='org.junit.jupiter.api.Test']) = 1]                 or                 //ClassOrInterfaceDeclaration[matches(@Image,'.*Test$')]             ]"/>
    </properties>
  </rule>
  <rule name="NoPackage" ref="category/java/codestyle.xml/NoPackage"/>
  <rule name="PackageCase" ref="category/java/codestyle.xml/PackageCase"/>
  <rule name="PrematureDeclaration" ref="category/java/codestyle.xml/PrematureDeclaration"/>
  <rule name="RemoteInterfaceNamingConvention"
    ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention"/>
  <rule name="RemoteSessionInterfaceNamingConvention"
    ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention"/>
  <rule name="ShortClassName" ref="category/java/codestyle.xml/ShortClassName">
    <properties>
      <property name="minimum" value="3"/>
    </properties>
  </rule>
  <rule name="ShortMethodName" ref="category/java/codestyle.xml/ShortMethodName"/>
  <rule name="ShortVariable" ref="category/java/codestyle.xml/ShortVariable">
    <properties>
      <property name="minimum" value="2"/>
    </properties>
  </rule>
  <rule name="SuspiciousConstantFieldName" ref="category/java/codestyle.xml/SuspiciousConstantFieldName"/>
  <rule name="UnnecessaryConstructor" ref="category/java/codestyle.xml/UnnecessaryConstructor"/>
  <rule name="UnnecessaryFullyQualifiedName" ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
  <rule name="UnnecessaryLocalBeforeReturn" ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"/>
  <rule name="UnnecessaryModifier" ref="category/java/codestyle.xml/UnnecessaryModifier"/>
  <rule name="UnnecessaryReturn" ref="category/java/codestyle.xml/UnnecessaryReturn"/>
  <rule name="UselessParentheses" ref="category/java/codestyle.xml/UselessParentheses"/>
  <rule name="UselessQualifiedThis" ref="category/java/codestyle.xml/UselessQualifiedThis"/>
  <rule name="VariableNamingConventions" ref="category/java/codestyle.xml/VariableNamingConventions"/>
  <rule name="WhileLoopsMustUseBraces" ref="category/java/codestyle.xml/WhileLoopsMustUseBraces"/>
  <rule name="AbstractClassWithoutAnyMethod" ref="category/java/design.xml/AbstractClassWithoutAnyMethod">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../Annotation/NormalAnnotation[Name[@Image='NoArgsConstructor'] and MemberValuePairs//PrimaryPrefix/Name[@Image='AccessLevel.PRIVATE'] and count(//ImportDeclaration/Name[@Image='lombok.NoArgsConstructor']) = 1]                 or                 ../Annotation/NormalAnnotation[Name[@Image='NoArgsConstructor'] and MemberValuePairs//PrimaryPrefix/Name[@Image='AccessLevel.PROTECTED'] and count(//ImportDeclaration/Name[@Image='lombok.NoArgsConstructor']) = 1]             ]"/>
    </properties>
  </rule>
  <rule name="AvoidCatchingGenericException" ref="category/java/design.xml/AvoidCatchingGenericException"/>
  <rule name="AvoidDeeplyNestedIfStmts" ref="category/java/design.xml/AvoidDeeplyNestedIfStmts"/>
  <rule name="AvoidRethrowingException" ref="category/java/design.xml/AvoidRethrowingException"/>
  <rule name="AvoidThrowingNewInstanceOfSameException"
    ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException"/>
  <rule name="AvoidThrowingNullPointerException"
    ref="category/java/design.xml/AvoidThrowingNullPointerException"/>
  <rule name="AvoidThrowingRawExceptionTypes" ref="category/java/design.xml/AvoidThrowingRawExceptionTypes"/>
  <rule name="ClassWithOnlyPrivateConstructorsShouldBeFinal"
    ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
  <rule name="CollapsibleIfStatements" ref="category/java/design.xml/CollapsibleIfStatements"/>
  <rule name="CouplingBetweenObjects" ref="category/java/design.xml/CouplingBetweenObjects">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 //ClassOrInterfaceDeclaration[../Annotation/*/Name[@Image='RestControllerAdvice']]                 or                 //ClassOrInterfaceDeclaration[../Annotation/*/Name[@Image='ControllerAdvice']]             ]"/>
    </properties>
  </rule>
  <rule name="CyclomaticComplexity" ref="category/java/design.xml/CyclomaticComplexity"/>
  <rule name="DoNotExtendJavaLangError" ref="category/java/design.xml/DoNotExtendJavaLangError"/>
  <rule name="ExceptionAsFlowControl" ref="category/java/design.xml/ExceptionAsFlowControl"/>
  <rule name="ExcessiveClassLength" ref="category/java/design.xml/ExcessiveClassLength"/>
  <rule name="ExcessiveMethodLength" ref="category/java/design.xml/ExcessiveMethodLength"/>
  <rule name="ExcessiveParameterList" ref="category/java/design.xml/ExcessiveParameterList"/>
  <rule name="ExcessivePublicCount" ref="category/java/design.xml/ExcessivePublicCount"/>
  <rule name="FinalFieldCouldBeStatic" ref="category/java/design.xml/FinalFieldCouldBeStatic"/>
  <rule name="GodClass" ref="category/java/design.xml/GodClass"/>
  <rule name="ImmutableField" ref="category/java/design.xml/ImmutableField">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../../../../../Annotation/*/Name[@Image='Setter']                 or                 ../../../../../../Annotation/*/Name[@Image='Data']                 or                 ../../../../../../Annotation/*/Name[@Image='NoArgsConstructor']                 or                 ../../../Annotation/*/Name[@Image='Setter']                 or                 ../../../Annotation/*/Name[@Image='CreatedDate']                 or                 ../../../Annotation/*/Name[@Image='LastModifiedDate']             ]"/>
    </properties>
  </rule>
  <rule name="LogicInversion" ref="category/java/design.xml/LogicInversion"/>
  <rule name="ModifiedCyclomaticComplexity" ref="category/java/design.xml/ModifiedCyclomaticComplexity"/>
  <rule name="NPathComplexity" ref="category/java/design.xml/NPathComplexity"/>
  <rule name="NcssConstructorCount" ref="category/java/design.xml/NcssConstructorCount"/>
  <rule name="NcssCount" ref="category/java/design.xml/NcssCount"/>
  <rule name="NcssMethodCount" ref="category/java/design.xml/NcssMethodCount"/>
  <rule name="NcssTypeCount" ref="category/java/design.xml/NcssTypeCount"/>
  <rule name="SignatureDeclareThrowsException" ref="category/java/design.xml/SignatureDeclareThrowsException">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../../Annotation/*[Name[@Image='Test'] and count(//ImportDeclaration/Name[@Image='org.junit.jupiter.api.Test']) = 1]                 or                 //ClassOrInterfaceDeclaration[matches(@Image,'.*Test$')]             ]"/>
    </properties>
  </rule>
  <rule name="SimplifiedTernary" ref="category/java/design.xml/SimplifiedTernary"/>
  <rule name="SimplifyBooleanAssertion" ref="category/java/design.xml/SimplifyBooleanAssertion"/>
  <rule name="SimplifyBooleanExpressions" ref="category/java/design.xml/SimplifyBooleanExpressions"/>
  <rule name="SimplifyBooleanReturns" ref="category/java/design.xml/SimplifyBooleanReturns"/>
  <rule name="SimplifyConditional" ref="category/java/design.xml/SimplifyConditional"/>
  <rule name="SingularField" ref="category/java/design.xml/SingularField">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../../../Annotation/*/Name[@Image='Setter']                 or                 ../../../../Annotation/*/Name[@Image='Getter']                 or                 ../../../../Annotation/*/Name[@Image='Data']                 or                 ../../../Annotation/*/Name[@Image='Setter']                 or                 ../../../Annotation/*/Name[@Image='Getter']             ]"/>
    </properties>
  </rule>
  <rule name="StdCyclomaticComplexity" ref="category/java/design.xml/StdCyclomaticComplexity"/>
  <rule name="SwitchDensity" ref="category/java/design.xml/SwitchDensity"/>
  <rule name="TooManyFields" ref="category/java/design.xml/TooManyFields"/>
  <rule name="TooManyMethods" ref="category/java/design.xml/TooManyMethods">
    <properties>
      <property name="maxmethods" value="15"/>
      <property name="violationSuppressXPath"
        value=".[
        //ClassOrInterfaceDeclaration[../Annotation/*/Name[@Image='RestControllerAdvice']]
        or
        //ClassOrInterfaceDeclaration[../Annotation/*/Name[@Image='ControllerAdvice']]
        or
        //ClassOrInterfaceDeclaration[matches(@Image,'.*Test$')]
        ]"/>
    </properties>
  </rule>
  <rule name="UseObjectForClearerAPI" ref="category/java/design.xml/UseObjectForClearerAPI"/>
  <rule name="UseUtilityClass" ref="category/java/design.xml/UseUtilityClass">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../Annotation/NormalAnnotation[Name[@Image='NoArgsConstructor'] and MemberValuePairs//PrimaryPrefix/Name[@Image='AccessLevel.PRIVATE'] and count(//ImportDeclaration/Name[@Image='lombok.NoArgsConstructor']) = 1]                 or                 ../../Annotation/MarkerAnnotation/Name[@Image='UtilityClass' and count(//ImportDeclaration/Name[@Image='lombok.experimental.UtilityClass']) = 1]                 or                 ../../Annotation/*/Name[@Image='SpringBootApplication']             ]"/>
    </properties>
  </rule>
  <rule name="UselessOverridingMethod" ref="category/java/design.xml/UselessOverridingMethod"/>
  <rule name="CommentContent" ref="category/java/documentation.xml/CommentContent"/>
  <rule name="CommentSize" ref="category/java/documentation.xml/CommentSize">
    <properties>
      <property name="maxLineLength" value="120"/>
      <property name="maxLines" value="12"/>
    </properties>
  </rule>
  <rule name="UncommentedEmptyConstructor" ref="category/java/documentation.xml/UncommentedEmptyConstructor"/>
  <rule name="UncommentedEmptyMethodBody" ref="category/java/documentation.xml/UncommentedEmptyMethodBody">
    <properties>
      <property name="violationSuppressXPath"
        value=".[                 ../../Annotation/SingleMemberAnnotation[Name[@Image='Pointcut'] and count(//ImportDeclaration/Name[@Image='org.aspectj.lang.annotation.Pointcut']) = 1]             ]"/>
    </properties>
  </rule>
  <rule name="AssignmentToNonFinalStatic" ref="category/java/errorprone.xml/AssignmentToNonFinalStatic"/>
  <rule name="AvoidAccessibilityAlteration" ref="category/java/errorprone.xml/AvoidAccessibilityAlteration"/>
  <rule name="AvoidAssertAsIdentifier" ref="category/java/errorprone.xml/AvoidAssertAsIdentifier"/>
  <rule name="AvoidBranchingStatementAsLastInLoop"
    ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop"/>
  <rule name="AvoidCallingFinalize" ref="category/java/errorprone.xml/AvoidCallingFinalize"/>
  <rule name="AvoidCatchingNPE" ref="category/java/errorprone.xml/AvoidCatchingNPE"/>
  <rule name="AvoidCatchingThrowable" ref="category/java/errorprone.xml/AvoidCatchingThrowable"/>
  <rule name="AvoidDecimalLiteralsInBigDecimalConstructor"
    ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
  <rule name="AvoidDuplicateLiterals" ref="category/java/errorprone.xml/AvoidDuplicateLiterals"/>
  <rule name="AvoidEnumAsIdentifier" ref="category/java/errorprone.xml/AvoidEnumAsIdentifier"/>
  <rule name="AvoidFieldNameMatchingMethodName"
    ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName"/>
  <rule name="AvoidInstanceofChecksInCatchClause"
    ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause"/>
  <rule name="AvoidLiteralsInIfCondition" ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition"/>
  <rule name="AvoidLosingExceptionInformation"
    ref="category/java/errorprone.xml/AvoidLosingExceptionInformation"/>
  <rule name="AvoidMultipleUnaryOperators" ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators"/>
  <rule name="AvoidUsingOctalValues" ref="category/java/errorprone.xml/AvoidUsingOctalValues"/>
  <rule name="BadComparison" ref="category/java/errorprone.xml/BadComparison"/>
  <rule name="BrokenNullCheck" ref="category/java/errorprone.xml/BrokenNullCheck"/>
  <rule name="CheckSkipResult" ref="category/java/errorprone.xml/CheckSkipResult"/>
  <rule name="ClassCastExceptionWithToArray"
    ref="category/java/errorprone.xml/ClassCastExceptionWithToArray"/>
  <rule name="CloneMethodMustBePublic" ref="category/java/errorprone.xml/CloneMethodMustBePublic"/>
  <rule name="CloneMethodMustImplementCloneable"
    ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable"/>
  <rule name="CloneMethodMustImplementCloneable"
    ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable"/>
  <rule name="CloneMethodReturnTypeMustMatchClassName"
    ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName"/>
  <rule name="CloneThrowsCloneNotSupportedException"
    ref="category/java/errorprone.xml/CloneThrowsCloneNotSupportedException"/>
  <rule name="CloseResource" ref="category/java/errorprone.xml/CloseResource"/>
  <rule name="CompareObjectsWithEquals" ref="category/java/errorprone.xml/CompareObjectsWithEquals"/>
  <rule name="ConstructorCallsOverridableMethod"
    ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod"/>
  <rule name="DoNotCallGarbageCollectionExplicitly"
    ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly"/>
  <rule name="DoNotCallSystemExit" ref="category/java/errorprone.xml/DoNotCallSystemExit"/>
  <rule name="DoNotThrowExceptionInFinally" ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally"/>
  <rule name="DontImportSun" ref="category/java/errorprone.xml/DontImportSun"/>
  <rule name="DontUseFloatTypeForLoopIndices"
    ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices"/>
  <rule name="EmptyCatchBlock" ref="category/java/errorprone.xml/EmptyCatchBlock"/>
  <rule name="EmptyFinalizer" ref="category/java/errorprone.xml/EmptyFinalizer"/>
  <rule name="EmptyFinallyBlock" ref="category/java/errorprone.xml/EmptyFinallyBlock"/>
  <rule name="EmptyIfStmt" ref="category/java/errorprone.xml/EmptyIfStmt"/>
  <rule name="EmptyInitializer" ref="category/java/errorprone.xml/EmptyInitializer"/>
  <rule name="EmptyInitializer" ref="category/java/errorprone.xml/EmptyInitializer"/>
  <rule name="EmptyStatementBlock" ref="category/java/errorprone.xml/EmptyStatementBlock"/>
  <rule name="EmptyStatementNotInLoop" ref="category/java/errorprone.xml/EmptyStatementNotInLoop"/>
  <rule name="EmptySwitchStatements" ref="category/java/errorprone.xml/EmptySwitchStatements"/>
  <rule name="EmptySynchronizedBlock" ref="category/java/errorprone.xml/EmptySynchronizedBlock"/>
  <rule name="EmptyTryBlock" ref="category/java/errorprone.xml/EmptyTryBlock"/>
  <rule name="EmptyWhileStmt" ref="category/java/errorprone.xml/EmptyWhileStmt"/>
  <rule name="EqualsNull" ref="category/java/errorprone.xml/EqualsNull"/>
  <rule name="FinalizeDoesNotCallSuperFinalize"
    ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize"/>
  <rule name="FinalizeOnlyCallsSuperFinalize"
    ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize"/>
  <rule name="FinalizeOverloaded" ref="category/java/errorprone.xml/FinalizeOverloaded"/>
  <rule name="FinalizeShouldBeProtected" ref="category/java/errorprone.xml/FinalizeShouldBeProtected"/>
  <rule name="IdempotentOperations" ref="category/java/errorprone.xml/IdempotentOperations"/>
  <rule name="ImportFromSamePackage" ref="category/java/errorprone.xml/ImportFromSamePackage"/>
  <rule name="InstantiationToGetClass" ref="category/java/errorprone.xml/InstantiationToGetClass"/>
  <rule name="InvalidSlf4jMessageFormat" ref="category/java/errorprone.xml/InvalidSlf4jMessageFormat"/>
  <rule name="JUnitStaticSuite" ref="category/java/errorprone.xml/JUnitStaticSuite"/>
  <rule name="JumbledIncrementer" ref="category/java/errorprone.xml/JumbledIncrementer"/>
  <rule name="LoggerIsNotStaticFinal" ref="category/java/errorprone.xml/LoggerIsNotStaticFinal"/>
  <rule name="MethodWithSameNameAsEnclosingClass"
    ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass"/>
  <rule name="MisplacedNullCheck" ref="category/java/errorprone.xml/MisplacedNullCheck"/>
  <rule name="MissingBreakInSwitch" ref="category/java/errorprone.xml/MissingBreakInSwitch"/>
  <rule name="MissingSerialVersionUID" ref="category/java/errorprone.xml/MissingSerialVersionUID"/>
  <rule name="MissingStaticMethodInNonInstantiatableClass"
    ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass"/>
  <rule name="MoreThanOneLogger" ref="category/java/errorprone.xml/MoreThanOneLogger"/>
  <rule name="NonCaseLabelInSwitchStatement"
    ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement"/>
  <rule name="NonStaticInitializer" ref="category/java/errorprone.xml/NonStaticInitializer"/>
  <rule name="OverrideBothEqualsAndHashcode"
    ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode"/>
  <rule name="ProperCloneImplementation" ref="category/java/errorprone.xml/ProperCloneImplementation"/>
  <rule name="ProperLogger" ref="category/java/errorprone.xml/ProperLogger"/>
  <rule name="ReturnEmptyArrayRatherThanNull"
    ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull"/>
  <rule name="ReturnFromFinallyBlock" ref="category/java/errorprone.xml/ReturnFromFinallyBlock"/>
  <rule name="SimpleDateFormatNeedsLocale" ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale"/>
  <rule name="SingleMethodSingleton" ref="category/java/errorprone.xml/SingleMethodSingleton"/>
  <rule name="SingletonClassReturningNewInstance"
    ref="category/java/errorprone.xml/SingletonClassReturningNewInstance"/>
  <rule name="StaticEJBFieldShouldBeFinal" ref="category/java/errorprone.xml/StaticEJBFieldShouldBeFinal"/>
  <rule name="StringBufferInstantiationWithChar"
    ref="category/java/errorprone.xml/StringBufferInstantiationWithChar"/>
  <rule name="SuspiciousEqualsMethodName" ref="category/java/errorprone.xml/SuspiciousEqualsMethodName"/>
  <rule name="SuspiciousHashcodeMethodName" ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName"/>
  <rule name="SuspiciousOctalEscape" ref="category/java/errorprone.xml/SuspiciousOctalEscape"/>
  <rule name="TestClassWithoutTestCases" ref="category/java/errorprone.xml/TestClassWithoutTestCases"/>
  <rule name="UnconditionalIfStatement" ref="category/java/errorprone.xml/UnconditionalIfStatement"/>
  <rule name="UnnecessaryBooleanAssertion" ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion"/>
  <rule name="UnnecessaryCaseChange" ref="category/java/errorprone.xml/UnnecessaryCaseChange"/>
  <rule name="UnnecessaryConversionTemporary"
    ref="category/java/errorprone.xml/UnnecessaryConversionTemporary"/>
  <rule name="UnusedNullCheckInEquals" ref="category/java/errorprone.xml/UnusedNullCheckInEquals"/>
  <rule name="UseCorrectExceptionLogging" ref="category/java/errorprone.xml/UseCorrectExceptionLogging"/>
  <rule name="UseEqualsToCompareStrings" ref="category/java/errorprone.xml/UseEqualsToCompareStrings"/>
  <rule name="UseProperClassLoader" ref="category/java/errorprone.xml/UseProperClassLoader"/>
  <rule name="UselessOperationOnImmutable" ref="category/java/errorprone.xml/UselessOperationOnImmutable"/>
  <rule name="AvoidSynchronizedAtMethodLevel"
    ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel"/>
  <rule name="AvoidThreadGroup" ref="category/java/multithreading.xml/AvoidThreadGroup"/>
  <rule name="DoNotUseThreads" ref="category/java/multithreading.xml/DoNotUseThreads"/>
  <rule name="DontCallThreadRun" ref="category/java/multithreading.xml/DontCallThreadRun"/>
  <rule name="DoubleCheckedLocking" ref="category/java/multithreading.xml/DoubleCheckedLocking"/>
  <rule name="NonThreadSafeSingleton" ref="category/java/multithreading.xml/NonThreadSafeSingleton"/>
  <rule name="UnsynchronizedStaticDateFormatter"
    ref="category/java/multithreading.xml/UnsynchronizedStaticDateFormatter"/>
  <rule name="UseNotifyAllInsteadOfNotify"
    ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify"/>
  <rule name="AddEmptyString" ref="category/java/performance.xml/AddEmptyString"/>
  <rule name="AppendCharacterWithChar" ref="category/java/performance.xml/AppendCharacterWithChar"/>
  <rule name="AvoidArrayLoops" ref="category/java/performance.xml/AvoidArrayLoops"/>
  <rule name="AvoidUsingShortType" ref="category/java/performance.xml/AvoidUsingShortType"/>
  <rule name="BigIntegerInstantiation" ref="category/java/performance.xml/BigIntegerInstantiation"/>
  <rule name="BooleanInstantiation" ref="category/java/performance.xml/BooleanInstantiation"/>
  <rule name="ByteInstantiation" ref="category/java/performance.xml/ByteInstantiation"/>
  <rule name="ConsecutiveAppendsShouldReuse"
    ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse"/>
  <rule name="ConsecutiveLiteralAppends" ref="category/java/performance.xml/ConsecutiveLiteralAppends"/>
  <rule name="InefficientEmptyStringCheck" ref="category/java/performance.xml/InefficientEmptyStringCheck"/>
  <rule name="InefficientStringBuffering" ref="category/java/performance.xml/InefficientStringBuffering"/>
  <rule name="InsufficientStringBufferDeclaration"
    ref="category/java/performance.xml/InsufficientStringBufferDeclaration"/>
  <rule name="IntegerInstantiation" ref="category/java/performance.xml/IntegerInstantiation"/>
  <rule name="LongInstantiation" ref="category/java/performance.xml/LongInstantiation"/>
  <rule name="OptimizableToArrayCall" ref="category/java/performance.xml/OptimizableToArrayCall"/>
  <rule name="RedundantFieldInitializer" ref="category/java/performance.xml/RedundantFieldInitializer"/>
  <rule name="ShortInstantiation" ref="category/java/performance.xml/ShortInstantiation"/>
  <rule name="SimplifyStartsWith" ref="category/java/performance.xml/SimplifyStartsWith"/>
  <rule name="StringInstantiation" ref="category/java/performance.xml/StringInstantiation"/>
  <rule name="StringToString" ref="category/java/performance.xml/StringToString"/>
  <rule name="TooFewBranchesForASwitchStatement"
    ref="category/java/performance.xml/TooFewBranchesForASwitchStatement"/>
  <rule name="UnnecessaryWrapperObjectCreation"
    ref="category/java/performance.xml/UnnecessaryWrapperObjectCreation"/>
  <rule name="UseArrayListInsteadOfVector" ref="category/java/performance.xml/UseArrayListInsteadOfVector"/>
  <rule name="UseArraysAsList" ref="category/java/performance.xml/UseArraysAsList"/>
  <rule name="UseIndexOfChar" ref="category/java/performance.xml/UseIndexOfChar"/>
  <rule name="UseStringBufferLength" ref="category/java/performance.xml/UseStringBufferLength"/>
  <rule name="UselessStringValueOf" ref="category/java/performance.xml/UselessStringValueOf"/>
</ruleset>
